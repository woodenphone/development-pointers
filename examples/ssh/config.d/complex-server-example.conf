## ~/ssh/config.d/complex-server-example.conf
## Outgoing ssh config dropin config file.
## ==================================== ##
## See also:
##  https://www.man7.org/linux/man-pages/man1/ssh.1.html
##  https://www.man7.org/linux/man-pages/man5/ssh_config.5.html
##  https://www.man7.org/linux/man-pages/man5/sshd_config.5.html
##  https://man.openbsd.org/ssh_config.5
##  https://www.digitalocean.com/community/tutorials/how-to-configure-custom-connection-options-for-your-ssh-client
##  https://www.gnu.org/software/bash/manual/html_node/Invoking-Bash.html
## ==================================== ##


Host complex-server-example ## Alias for commandline.
	## Basic connection details:
    Hostname="192.168.1.42" ## Actual location to connect to.
	User="yeti" ## User to log in as.
	Port="22" ## SSH listen port on server.

	## Picture style representation of hash:
	VisualHostKey="yes"
	
	IdentityAgent="SSH_AUTH_SOCK" # Unix-domain socket used to communicate with the authentication agent

	## Explicitly restrict connection parameters from client end:
	PasswordAuthentication=no ## Prohibit from the client side the use of password-based ssh login.
	PubkeyAuthentication=yes
	RequiredRSASize="2048" ## Default 1024; Only set so low to support more smartcards.
	
	## Retry thrice.
	ConnectionAttempts="3"

	## Reuse single SSH session:
	ControlMaster="yes"
	ControlPath="~/.sshcontrol.%C.sock" # Filepath to SSH session's control file.
	ControlPersist="300" ## Wait for this length of inactivity before autoclosing.
	
	## Logging control:
	# LogLevel="INFO" # INFO is default.
	# LogVerbose="kex.c:*" # EXAMPLE VALUE

	## Connection continuity:
	ServerAliveCountMax="6"
	ServerAliveInterval="10"

	# ExitOnForwardFailure="no" ## Die if portforwarding fails.

	## Establish tun device:
	Tunnel="point-to-point"
	TunnelDevice="any:any"

	## SOCKS forwarding proxy:
	# DynamicForward="" ## [bind_address:]port
	

	## Forward local port(s):
	## [bind_address:]port host:hostport
	# LocalForward="localhost:9990" "192.168.1.42:9990" # TODO: TESTME.
	# LocalForward localhost:9999 192.168.1.42:9999 # TODO: TESTME.
	# LocalForward="localhost:9999" "%h:9999" # TODO: TESTME.

	## Forward remote port(s)
	# RemoteForward "192.168.1.42:9991" "localhost:9991"
	# RemoteForward "%h:9991" "localhost:9991" # TODO: TESTME.
